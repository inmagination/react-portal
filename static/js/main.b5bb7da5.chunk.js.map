{"version":3,"sources":["components/Button/Button.js","components/Modal/Modal.js","components/App/App.js","utils/fontawesome.js","index.js"],"names":["Button","props","extraClass","size","icon","text","onClick","sizeClass","concat","extra","iconClass","react_default","a","createElement","className","index_es","Modal","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","_this$props","title","children","onClose","ReactDOM","createPortal","document","getElementById","Component","App","state","showModal","_openModal","modal","_this","setState","_closeModal","_this2","isModal","role","aria-label","Button_Button","Modal_Modal","library","add","faTimes","render","App_App"],"mappings":"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","file":"static/js/main.b5bb7da5.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from \"prop-types\";\n\nimport \"./button.scss\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\n\nexport const Button = (props) => {       \n    const { extraClass, size, icon, text, onClick } = props;  \n\n    const sizeClass = size ? `c-button--${size}` : '';\n    const extra = extraClass ? extraClass : '';\n    const iconClass = icon ? icon : '';\n\n    return (\n        <button\n            className={`c-button ${sizeClass} ${extra}`} \n            onClick={onClick}>\n            {iconClass \n                ? <FontAwesomeIcon\n                    icon={iconClass}\n                    className=\"c-button__icon\" />\n                : '' }            \n            {text}\n        </button>\n      );    \n};\n\n\nButton.propTypes = { \n    extraClass: PropTypes.string,   \n    size: PropTypes.string,\n    icon: PropTypes.string,\n    text: PropTypes.string.isRequired,\n};","import React, { Component } from \"react\";\nimport ReactDOM from 'react-dom';\nimport PropTypes from \"prop-types\";\n\nimport \"./modal.scss\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\n\nexport class Modal extends Component {\n    static propTypes = {\n\t\ttitle: PropTypes.string,\n\t\tchildren: PropTypes.array\n    };\n\n    render() {\n\t\tconst { title, children, onClose } = this.props;\n\n        // creaciÃ³n de portal del modal\n        return ReactDOM.createPortal(\n            <div className=\"c-modal\">\n                <div className=\"c-modal__container\">\n                    <div className=\"c-modal__header\">\n                        <h2 className=\"c-modal__title\">{title}</h2>\n                        <FontAwesomeIcon\n                            icon=\"times\"\n                            className=\"c-modal__close\" \n\t\t\t\t\t\t\tonClick={onClose}/>\n                    </div>\n                    <div className=\"c-modal__content\">{children}</div>\n                </div>\n\t\t\t</div>,\n\t\t\tdocument.getElementById('modal')\n        );\n    }\n}\n","// Recursos\nimport React, { Component } from \"react\";\n\n// Styles\nimport \"./app.scss\";\n\n// Components\nimport { Button } from \"../Button/Button\";\nimport { Modal } from \"../Modal/Modal\";\n\nexport default class App extends Component {\n    state = { showModal: null }\n    _openModal = modal => this.setState({ showModal: modal })\n    _closeModal = () => this.setState({ showModal: null })    \n\n    render() {   \n        const isModal = this.state.showModal;    \n        return (\n            <div className='l-container'>\n                <span className='app__icon' role='img' aria-label='rocket'>ðŸš€ðŸŒŒ</span>\n                <h1 className='app__title'>Portal modals</h1>\n                <p className='margin-top-10' >Abre los diferentes modales y teletransportate a sus respectivos portales.</p>\n\n\n\n                <div className='app__buttons'>\n                    <Button      \n                        text='Open modal'\n                        onClick={() => this._openModal('modal-one')} /> \n                    <Button  \n                        extraClass='margin-top-10'      \n                        text='Another open modal'\n                        onClick={() => this._openModal('modal-two')} />\n                </div>\n\n\n\n                {isModal === 'modal-one' &&\n                    <Modal title='Modal portal 1' onClose={this._closeModal} > \n                        <p>Se ha abierto un modal, cosa de brujerÃ­a. Me pregunto quÃ© pasarÃ¡ si le doy al icono de la x o al botÃ³n chillÃ³n de abajo. *ironic mode*</p>\n                        <Button                 \n                            extraClass='margin-top-20'\n                            text='Go modal 2'\n                            onClick={() => this._openModal('modal-two')} />\n                    </Modal>\n                }  \n\n\n\n                {isModal === 'modal-two' &&\n                    <Modal title='Modal portal 2' onClose={this._closeModal} > \n                        <p>Se ha abierto un segundo modal. QuÃ© inesperado comportamiento de React. Pero, Â¿quÃ© verÃ© si inspecciono el DOM? Â¿DÃ³nde se renderizarÃ¡ el modal? Â¿CuÃ¡ntos modales a la vez aparecerÃ¡n?</p>\n                        <Button                 \n                            extraClass='margin-top-20'\n                            text='Go modal 1'\n                            onClick={() => this._openModal('modal-one')} />\n                    </Modal>\n                }                             \n            </div>\n        );\n    }\n}","// Fontawesome Icons\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\n\r\nimport {\r\n  faTimes\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nlibrary.add(\r\n  faTimes\r\n);\r\n\r\nexport default library;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App/App';\nimport \"./utils/fontawesome\";\nimport \"./styles/index.scss\";\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}